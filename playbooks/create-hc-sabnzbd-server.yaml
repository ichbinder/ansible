---
- name: Create a server in Hetzner Cloud
  hosts: localhost
  gather_facts: false
  vars:
    domain_suffix: mediatoken.de

  tasks:
    - name: Create the "{{ SERVER_NAME }}" server
      hetzner.hcloud.hcloud_server:
        state: present
        name: "{{ SERVER_NAME }}" # Server name
        server_type: cax21 # Server type
        image: ubuntu-24.04 # Operating system image
        ssh_keys:
          - HetznerMediaProjekt # Hetzner SSH Key as an array
        private_networks:
          - Media-Central # Private network as an array
        api_token: "{{ HETZNER_CLOUD }}"
      register: hcloud_server_result

    - name: Print the result
      debug:
        var: hcloud_server_result

    - name: Add new server to inventory
      add_host:
        name: "{{ hcloud_server_result.hcloud_server.ipv4_address }}"
        groups: created_servers
        ansible_user: root

    - name: Warte, bis SSH verfügbar ist
      wait_for:
        host: "{{ hcloud_server_result.hcloud_server.ipv4_address }}"
        port: 22
        delay: 10
        timeout: 300

- name: Configure server - Install Docker and deploy SABnzbd via Docker Compose
  hosts: created_servers
  become: true
  gather_facts: !!bool true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: true

    - name: Install prerequisite packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Docker GPG Schlüssel hinzufügen
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Docker Repository hinzufügen
      apt_repository:
        repo: "deb [arch=arm64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present

    - name: Apt Cache aktualisieren nach Repository Hinzufügen
      apt:
        update_cache: true

    - name: Docker installieren
      apt:
        name: docker-ce
        state: present

    - name: Docker Compose Plugin installieren
      apt:
        name: docker-compose-plugin
        state: present

    - name: Verzeichnisse für SABnzbd anlegen
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - /root/data/config
        - /root/data/Usenet_Downloads
        - /root/data/incomplete-downloads

    - name: Setze Berechtigungen für /root/data so dass PUID=1000 und PGID=1000 lesen, schreiben und ausführen können
      file:
        path: /root/data
        owner: "1000"
        group: "1000"
        mode: "0775"
        recurse: yes
      become: true

    - name: Installiere python3-pip
      apt:
        name: python3-pip
        state: present
      become: true

    - name: Installiere boto3 (zum S3 Zugriff)
      apt:
        name: python3-boto3
        state: present
      become: true

    - name: Sabnzbd.ini vom S3 Bucket herunterladen
      amazon.aws.aws_s3:
        bucket: "media-storage01" # Ersetze mit deinem Bucket-Namen
        object: "MediaBackend/sabnzbd.ini" # Pfad zur Datei im Bucket (anpassen falls nötig)
        dest: /root/data/config/sabnzbd.ini
        mode: get
        endpoint_url: "https://hel1.your-objectstorage.com" # Passe die Endpoint URL bei Bedarf an
        aws_access_key: "{{ HETZNER_S3_ACCESS_KEY }}"
        aws_secret_key: "{{ HETZNER_S3_SECRET_KEY }}"
      become: true

    - name: Docker Compose Datei für SABnzbd kopieren
      copy:
        dest: /root/docker-compose.yml
        content: |
          version: "3.8"
          services:
            sabnzbd:
              image: lscr.io/linuxserver/sabnzbd:latest
              container_name: sabnzbd
              environment:
                - PUID=1000
                - PGID=1000
                - TZ=Etc/UTC
              volumes:
                - /root/data/config:/config
                - /root/data/Usenet_Downloads:/config/Downloads/complete  # optional
                - /root/data/incomplete-downloads:/config/Downloads/incomplete  # optional
              ports:
                - "8080:8080"
              restart: unless-stopped

    - name: SABnzbd Container mit Docker Compose starten
      shell: docker compose -f /root/docker-compose.yml up -d
      args:
        chdir: /root

- name: Add SSL to Nginx Proxy Manager
  hosts: localhost
  become: true
  gather_facts: true
  tasks:
    - include_tasks: add-domain-ssl-npm.yaml
      vars:
        DOMAIN: "{{ SERVER_NAME }}.{{ domain_suffix }}"
        SERVER_IP: "npm.{{ domain_suffix }}"
        NPM_ADMIN_EMAIL: "{{ NPM_ADMIN_EMAIL }}"
        NPM_ADMIN_PASSWORD: "{{ NPM_ADMIN_PASSWORD }}"
