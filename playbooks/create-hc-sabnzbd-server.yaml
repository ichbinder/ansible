---
- name: Create a server in Hetzner Cloud
  hosts: localhost
  gather_facts: false
  vars:
    domain_suffix: mediatoken.de

  tasks:
    - name: Create the "{{ SERVER_NAME }}" server
      hetzner.hcloud.hcloud_server:
        state: present
        name: "{{ SERVER_NAME }}"
        server_type: cax11
        location: hel1
        image: ubuntu-24.04
        ssh_keys:
          - HetznerMediaProjekt
        private_networks:
          - Media-Central
        api_token: "{{ HETZNER_CLOUD }}"
      register: hcloud_server_result

    - name: Print the result
      debug:
        var: hcloud_server_result

    - name: Add new server to inventory
      add_host:
        name: "{{ hcloud_server_result.hcloud_server.ipv4_address }}"
        groups: created_servers
        ansible_user: root

    - name: Wait for SSH to become available
      wait_for:
        host: "{{ hcloud_server_result.hcloud_server.ipv4_address }}"
        port: 22
        delay: 10
        timeout: 300

- name: Configure server - Install SABnzbd directly
  hosts: created_servers
  become: true
  gather_facts: !!bool true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: true

    - name: Install software-properties-common
      apt:
        name: software-properties-common
        state: present

    - name: Add multiverse repository
      command: add-apt-repository multiverse -y

    - name: Add universe repository
      command: add-apt-repository universe -y

    - name: Add SABnzbd PPA (nobetas)
      command: add-apt-repository ppa:jcfp/nobetas -y

    - name: Update and upgrade packages
      apt:
        update_cache: true
        upgrade: dist

    - name: Install SABnzbd and required packages
      apt:
        name:
          - sabnzbdplus
          - python3-pip
          - python3-boto3
        state: present

    - name: Create config directory
      file:
        path: /root/.sabnzbd
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Create scripts directory
      file:
        path: /root/scripts
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Download sabnzbd.ini from S3
      amazon.aws.aws_s3:
        bucket: "media-storage01"
        object: "MediaBackend/sabnzbd.ini"
        dest: /root/.sabnzbd/sabnzbd.ini
        mode: get
        endpoint_url: "https://hel1.your-objectstorage.com"
        aws_access_key: "{{ HETZNER_S3_ACCESS_KEY }}"
        aws_secret_key: "{{ HETZNER_S3_SECRET_KEY }}"

    - name: Set permissions for sabnzbd.ini
      file:
        path: /root/.sabnzbd/sabnzbd.ini
        owner: root
        group: root
        mode: "0600"

    - name: Download upload_s3_nzb.sh script
      get_url:
        url: https://raw.githubusercontent.com/ichbinder/ScriptBox/refs/heads/main/Bash/upload_s3_nzb.sh
        dest: /root/scripts/upload_s3_nzb.sh
        mode: "0755"
        owner: root
        group: root

    - name: Create .env file for upload script
      copy:
        dest: /root/scripts/.env
        content: |
          ACCESS_KEY={{ HETZNER_S3_ACCESS_KEY }}
          SECRET_KEY={{ HETZNER_S3_SECRET_KEY }}
          REGION="hel1"
          S3_ENDPOINT="hel1.your-objectstorage.com"
          S3_BUCKET="media-storage01"
        mode: "0600"
        owner: root
        group: root

    - name: Configure SABnzbd service
      copy:
        dest: /etc/default/sabnzbdplus
        content: |
          USER=root
          HOST=0.0.0.0
          PORT=8080
          EXTRAOPTS="--config-file /root/.sabnzbd/sabnzbd.ini"
        mode: "0644"

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Enable and start SABnzbd service
      systemd:
        name: sabnzbdplus
        enabled: yes
        state: started

- name: Install aws cli
  hosts: created_servers
  become: true
  gather_facts: true
  tasks:
    - include_tasks: add-aws-cli.yaml
      vars:
        AWS_ACCESS_KEY: "{{ HETZNER_S3_ACCESS_KEY }}"
        AWS_SECRET_KEY: "{{ HETZNER_S3_SECRET_KEY }}"
        AWS_REGION: "hel1"
        AWS_ENDPOINT: "hel1.your-objectstorage.com"
        AWS_BUCKET: "media-storage01"

- name: Add SSL to Nginx Proxy Manager
  hosts: localhost
  become: true
  gather_facts: true
  vars:
    domain_suffix: mediatoken.de
  tasks:
    - include_tasks: add-domain-ssl-npm.yaml
      vars:
        DOMAIN: "{{ SERVER_NAME }}.{{ domain_suffix }}"
        SERVER_IP: "{{ hostvars['localhost'].hcloud_server_result.hcloud_server.ipv4_address }}"
        PORT: "8080"
        NPM_IP: "npm.{{ domain_suffix }}"
        NPM_ADMIN_EMAIL: "{{ NPM_ADMIN_EMAIL }}"
        NPM_ADMIN_PASSWORD: "{{ NPM_ADMIN_PASSWORD }}"
